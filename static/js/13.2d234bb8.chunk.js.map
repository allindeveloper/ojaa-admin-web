{"version":3,"sources":["app/components/DefaultTable/CustomTable.js","app/components/Pagination/PaginationX.js","app/views/orders/shared/NewOrders.js","app/views/orders/shared/CompletedOrders.js","app/views/orders/shared/OrderTabs.js","app/views/orders/Orders.jsx"],"names":["Object","keys","hasOwnProperty","prototype","hasDontEnumBug","toString","propertyIsEnumerable","dontEnums","dontEnumsLength","length","obj","TypeError","prop","i","result","call","push","CustomTable","props","classes","react_default","a","createElement","Fragment","rows","map","item","index","key","Paper","component","className","paper","Grid","container","spacing","xs","sm","OrderNumber","OrderTime","ExpectedDeliveryTime","ItemReviewCount","Paid","justify","Button","variant","clsx","confirmButton","type","onClick","confirmItem","bind","undefined","Array","isArray","arg","PaginationX","React","Component","constructor","super","this","sortFunc","state","pager","totalPages","totalItems","pageSize","searching","searchData","componentWillMount","setPage","componentDidUpdate","prevProps","prevState","_","isEqual","data","sort","b","Name","nameA","toUpperCase","nameB","page","currentPage","onNewPageRequest","searchDataNew","objectSpread2","setState","service","controller","action","then","res","pages","getPager","setTimeout","onChangePage","orders","no","catch","err","startPage","endPage","startIndex","endIndex","Math","min","range","render","withStyles","theme","root","flexGrow","padding","color","palette","text","secondary","backgroundColor","width","withTheme","pageOfItems","op","disabled","isSearching","console","log","submitData","PageSize","showTable","show","formatRows","Items","Pagination_PaginationX","ServiceBase","getActiveOrders","Constants","ORDERS","PENDING","style","opacity","CONFIRM_ORDER","payload","orderNo","Swal","fire","title","showCancelButton","confirmButtonText","showLoaderOnConfirm","preConfirm","login","confirmOrder","response","error","showValidationMessage","concat","allowOutsideClick","isLoading","isConfirmed","getCompletedOrders","COMPLETED","TabPanel","children","value","other","objectWithoutProperties","assign","role","hidden","id","aria-labelledby","Container","Box","p","a11yProps","aria-controls","useStyles","makeStyles","background","OrderTabs","initialTabIndex","incomingTab","_React$useState","useState","_React$useState2","slicedToArray","setValue","AppBar","position","Tabs","onChange","event","newValue","scrollButtons","indicatorColor","textColor","aria-label","Tab","label","icon","AddShoppingCart_default","ShoppingBasket_default","ShoppingCartOutlined_default","shared_NewOrders","shared_CompletedOrders","Orders","location","tab","matx","routeSegments","name","path"],"mappings":"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","file":"static/js/13.2d234bb8.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { Grid, Button,Paper } from '@material-ui/core';\nimport clsx from 'clsx';\n\nif (!Object.keys) {\n  Object.keys = (function() {\n    'use strict';\n    var hasOwnProperty = Object.prototype.hasOwnProperty,\n        hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString'),\n        dontEnums = [\n          'toString',\n          'toLocaleString',\n          'valueOf',\n          'hasOwnProperty',\n          'isPrototypeOf',\n          'propertyIsEnumerable',\n          'constructor'\n        ],\n        dontEnumsLength = dontEnums.length;\n\n    return function(obj) {\n      if (typeof obj !== 'function' && (typeof obj !== 'object' || obj === null)) {\n        throw new TypeError('Object.keys called on non-object');\n      }\n\n      var result = [], prop, i;\n\n      for (prop in obj) {\n        if (hasOwnProperty.call(obj, prop)) {\n          result.push(prop);\n        }\n      }\n\n      if (hasDontEnumBug) {\n        for (i = 0; i < dontEnumsLength; i++) {\n          if (hasOwnProperty.call(obj, dontEnums[i])) {\n            result.push(dontEnums[i]);\n          }\n        }\n      }\n      return result;\n    };\n  }());\n}\n\n\nexport const CustomTable = (props)=>{\n  const classes = props.classes\n\treturn (\n\t\t<> \n        {\n          props.rows.length > 0 ? \n         <>\n          {\n            props.rows.map((item,index)=>{\n             return (\n              <div key={index}>\n              <Paper component=\"div\" className={classes.paper}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    Order Number\n                  </Grid>\n                  <Grid item xs={12} sm={6} className={classes.OrderNumber}>\n                    {item.OrderNumber}\n                  </Grid>\n                </Grid>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    Order Time\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    {item.OrderTime}\n                  </Grid>\n                </Grid>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    Expected Delivery Time\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    {item.ExpectedDeliveryTime}\n                  </Grid>\n                </Grid>\n                <br />\n           \n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    Item Review\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    {item.ItemReviewCount} ITEMS\n                  </Grid>\n                </Grid>\n              </Grid>\n    \n              <Grid item xs={12} sm={6}>\n                <label>Billing Details</label>\n                <hr />\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    Status\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    Guest\n                  </Grid>\n                </Grid>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    Name\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    Olamide Baba nla\n                  </Grid>\n                </Grid>\n    \n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    Billing Address\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    No 23, Olarokun Street.\u000bOff Ajoke Lewis. Amuwo Odofin Lagos State\n                  </Grid>\n                </Grid>\n    \n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    Phone\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    +234 803 675 0000\n                  </Grid>\n                </Grid>\n    \n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    Total\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    N 10000\n                  </Grid>\n                </Grid>\n    \n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6} >\n                    Paid\n                  </Grid>\n                  <Grid item xs={12} sm={6}className={classes.Paid}>\n                    N 10000\n                  </Grid>\n                </Grid>\n    \n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    Via Paystack\n                  </Grid>\n                  <Grid item xs={12} sm={6}></Grid>\n                </Grid>\n                <br />\n                <Grid container justify=\"center\">\n                  <Button\n                    variant=\"contained\"\n                    className={clsx(classes.confirmButton)}\n                    type=\"submit\"\n                    onClick={props.confirmItem.bind(this,item)}\n                  >\n                    CONFIRM\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n            </Paper>\n            <br/> &nbsp; &nbsp;\n            </div>\n            )\n                \n              })\n            }\n            </>\n            :\n            <p>No record found</p>\n        }\n        {/* // {\n        //   props.rows.length === 0 && !props.isSearching &&\n          \n        // } */}\n\t\t\t\t\t\n\t\t\t\t</>\n\t\t)\n}\n\n","import React from 'react';\nimport _ from 'lodash'\n\nif (!Array.isArray) {\n  Array.isArray = function(arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n  };\n}\n \n\n \nclass PaginationX extends React.Component {\n    constructor(props) {\n        super(props);\n        this.sortFunc=this.sortFunc.bind(this);\n        this.state = { pager: {},totalPages:this.props.totalPages,totalItems:this.props.totalItems,pageSize:10,searching:false,searchData:{}};\n    }\n \n    componentWillMount() {\n        // set page if items array isn't empty\n        if ( this.props.searchData !== '') {\n            this.setPage(1);\n        }\n    }\n \n    componentDidUpdate(prevProps, prevState) {\n        // reset page if items array has changed\n        if (! _.isEqual(this.props.searchData,this.state.searchData)) {\n            this.setPage(1);\n        }\n    }\n    \n    sortFunc(data){\n    return data.sort((a, b)=>{\n        if (a.Name ===undefined) {\n            return 0;\n        }\n        var nameA = a.Name.toUpperCase();\n        var nameB = b.Name.toUpperCase();\n        if (nameA < nameB) {\n            return -1;\n        }\n        if (nameA > nameB) {\n            return 1;\n        }\n          return 0;\n    }) \n    }\n    setPage(page) {\n\n       if (this.state.searching === true) {\n        return;\n       }\n\n       if (page > 1  && this.state.pager.currentPage === page) {\n                return;\n       }\n\n       this.props.onNewPageRequest();\n       var searchDataNew={...this.props.searchData};\n       var searchData={...this.props.searchData};\n       this.setState({searchData:searchDataNew});\n       searchData.page=page;\n       var data;\n       this.setState({searching:true});\n      // data=call api with search data\n      this.props.service(this.props.controller,this.props.action,page).then(res=>{\n           // console.log('back from search')\n            var pager = this.state.pager;\n            if (!Array.isArray(res.data)) {\n\n                 //if (res.headers['x-pagination']) {\n                // const serverPagination=JSON.parse(res.headers['x-pagination']);\n                //             this.setState({totalItems:serverPagination.totalCount,totalPages:serverPagination.totalPages});\n                // }\n                this.setState({totalPages:res.data.pages})\n \n                    if (page < 1 || (pager.totalPages !==0 && page > pager.totalPages) ) {\n                        return;\n                    }\n                        // get new pager object for specified pppage\n                pager = this.getPager(this.state.totalPages, page);\n                // update state\n                this.setState({ pager: pager });\n         \n                // call change page function in parent component\n                setTimeout(()=>{\n                    this.setState({searching:false})\n                    this.props.onChangePage([],pager);\n                },1000)\n            }\n            if (page > 2) {\n                data=res.data.orders.map((item,index)=>{item.no= (1+index) +((page-1) * this.state.pageSize); return item});\n            }\n            else if(page ===2){\n                data=res.data.orders.map((item,index)=>{item.no= 1+index + this.state.pageSize; return item});\n                \n            }\n            else{\n                data=res.data.orders.map((item,index)=>{item.no= ++index ; return item});\n            }\n             \n            // if (res.headers['x-pagination']) {\n            //     const serverPagination=JSON.parse(res.headers['x-pagination']);\n            //                 this.setState({totalItems:serverPagination.totalCount,totalPages:serverPagination.totalPages});\n            //             }\n            this.setState({totalPages:res.data.pages})\n        if (page < 1 || (pager.totalPages !==0 && page > pager.totalPages) ) {\n            return;\n        }\n        \n        // get new pager object for specified pppage\n        pager = this.getPager(this.state.totalPages, page);\n        \n        \n \n        // update state\n        this.setState({ pager: pager });\n \n        // call change page function in parent component\n        setTimeout(()=>{\n            this.setState({searching:false})\n            this.props.onChangePage(data,pager);\n        },1000)\n        \n      }).catch(err=>{});\n      \n\n    \n    }\n \n    getPager(totalPages, currentPage, pageSize) {\n        // default to first page\n        currentPage = currentPage || 1;\n \n        // default page size is 10\n        pageSize = pageSize || this.state.pageSize;\n \n        // calculate total pages\n        //var totalPages = this.props.totalPages;\n \n        var startPage, endPage;\n        if (totalPages <= 10) {\n            // less than 10 total pages so show all\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            // more than 10 total pages so calculate start and end pages\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n \n        // calculate start and end item indexes\n        var startIndex = (currentPage - 1) * pageSize;\n        var endIndex = Math.min(startIndex + pageSize - 1, this.state.totalItems - 1);\n \n        // create an array of pages to ng-repeat in the pager control\n        var pages = _.range(startPage, endPage + 1);\n \n        // return object with all pager properties required by the view\n        return {\n            totalItems: this.state.totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n \n    render() {\n        var pager = this.state.pager;\n \n        if (!pager.pages || pager.pages.length <= 1) {\n            // don't display pager if there is only 1 page \n            return null;\n        }\n \n        return (\n            <ul className=\"pagination  pull-right m-b-0\" >\n                <li className={pager.currentPage === 1 ? 'page-item disabled hidden-xs' : 'page-item hidden-xs'}>\n                    <a onClick={() => this.setPage(1)} className=\"page-link\">First</a>\n                </li>\n                <li className={pager.currentPage === 1 ? 'disabled page-item' : 'page-item'}>\n                    <a onClick={() => this.setPage(pager.currentPage - 1)} className=\"page-link\">Previous</a>\n                </li>\n                {pager.pages.map((page, index) =>\n                    <li key={index} className={pager.currentPage === page ? 'active hidden-xs page-item' : 'hidden-xs page-item'}>\n                        <a onClick={() => this.setPage(page)} className=\"page-link\">{page}</a>\n                    </li>\n                )}\n                <li className={pager.currentPage === pager.totalPages ? 'disabled page-item' : 'page-item'}>\n                    <a onClick={() => this.setPage(pager.currentPage + 1)} className=\"page-link\">Next</a>\n                </li>\n                <li className={pager.currentPage === pager.totalPages ? 'disabled hidden-xs page-item' : 'hidden-xs page-item'}>\n                    <a onClick={() => this.setPage(pager.totalPages)} className=\"page-link\">Last</a>\n                </li>\n            </ul>\n        );\n    }\n}\n\nexport default PaginationX;\n","import React, { Component } from \"react\";\nimport { Button, Grid, Paper, makeStyles, withStyles } from \"@material-ui/core\";\nimport { SimpleCard } from \"matx\";\nimport clsx from \"clsx\";\nimport { CustomTable } from \"app/components/DefaultTable/CustomTable\";\nimport { dummyRow } from \"../dummyRow\";\nimport PaginationX from \"app/components/Pagination/PaginationX\";\n\nconst styles = (theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(5),\n    //   textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  confirmButton: {\n    backgroundColor: \"#09A6E0\",\n    width: \"17rem\",\n  },\n  OrderNumber:{\n      color:\"#1A88B8\"\n  },\n  Paid:{\n      color:\"#CC7203\"\n  }\n});\nclass NewOrders extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orders: [],\n      currentPage:1,\n      searchData: {},\n      submitData: {},\n      PageSize: 10,\n      pageOfItems: [],\n      pager: {},\n      op: 1,\n      isSearching: true,\n      showTable: false,\n      show: true,\n      };\n  }\n\n  componentWillMount() {\n    this.setState({ searchData: { PageSize: this.state.PageSize } });\n  }\n\n  sortFunc = (data) => {\n    return data.sort((a, b) => {\n      if (a.Name === undefined || a.Name === null) {\n        return 0;\n      }\n      if (b.Name === undefined || b.Name === null) {\n        return 0;\n      }\n      var nameA = a.Name.toUpperCase();\n      var nameB = b.Name.toUpperCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n  };\n\n  onChangePage = (pageOfItems, pager) => {\n    this.setState({\n      pageOfItems: pageOfItems !== null ? pageOfItems : [],\n      pager,\n      op: 1,\n      disabled: false,\n      isSearching: false,\n    });\n  };\n\n  onNewPageRequest = () => {\n    console.log(\"new page request\", this.props)\n    this.setState({ op: 0.3 });\n  };\n\n  formatRows(data){\n    return\tdata.map((item,index)=>{\n        return{\n                OrderNumber: item.OrderNumber,\n                OrderTime: item.OrderTime,\n                ExpectedDeliveryTime: item.ExpectedDeliveryTime,\n                ItemReviewCount:item.ItemReviewCount,\n                Items:item.Items,\n        }\n      })\n  \n    }\n  render() {\n    let { classes } = this.props;\n    console.log(\"order in new\", this.props)\n    return (\n        <>\n            <>\n           <PaginationX currentPage ={this.state.currentPage}service={this.props.ServiceBase.getActiveOrders} controller={this.props.Constants.ORDERS} action={this.props.Constants.PENDING} onNewPageRequest={this.onNewPageRequest} searchData={this.state.searchData} onChangePage={this.onChangePage}  />\n          <div style={{ opacity: this.state.op }}>\n            <CustomTable   classes={classes} rows={this.state.pageOfItems} isSearching={this.state.isSearching}/>\n          </div>\n            </>\n          \n          </>\n      \n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(NewOrders);\n// withRouter(connect(mapStateToProps, { loginWithEmailAndPassword })(SignIn))\n","import React, { Component } from \"react\";\nimport { Button, Grid, Paper, makeStyles, withStyles } from \"@material-ui/core\";\nimport { SimpleCard } from \"matx\";\nimport clsx from \"clsx\";\nimport { CustomTable } from \"app/components/DefaultTable/CustomTable\";\nimport { dummyRow } from \"../dummyRow\";\nimport PaginationX from \"app/components/Pagination/PaginationX\";\nimport Swal from \"sweetalert2\";\n\nconst styles = (theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(5),\n    //   textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  confirmButton: {\n    backgroundColor: \"#09A6E0\",\n    width: \"17rem\",\n  },\n  OrderNumber: {\n    color: \"#1A88B8\",\n  },\n  Paid: {\n    color: \"#CC7203\",\n  },\n});\nclass CompletedOrders extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orders: [],\n      currentPage: 1,\n      searchData: {},\n      submitData: {},\n      PageSize: 10,\n      pageOfItems: [],\n      pager: {},\n      op: 1,\n      isSearching: true,\n      showTable: false,\n      show: true,\n    };\n  }\n\n  componentWillMount() {\n    this.setState({ searchData: { PageSize: this.state.PageSize } });\n  }\n\n  sortFunc = (data) => {\n    return data.sort((a, b) => {\n      if (a.Name === undefined || a.Name === null) {\n        return 0;\n      }\n      if (b.Name === undefined || b.Name === null) {\n        return 0;\n      }\n      var nameA = a.Name.toUpperCase();\n      var nameB = b.Name.toUpperCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n  };\n\n  onChangePage = (pageOfItems, pager) => {\n    this.setState({\n      pageOfItems: pageOfItems !== null ? pageOfItems : [],\n      pager,\n      op: 1,\n      disabled: false,\n      isSearching: false,\n    });\n  };\n\n  onNewPageRequest = () => {\n    console.log(\"new page request\", this.props);\n    this.setState({ op: 0.3 });\n  };\n\n  formatRows(data) {\n    return data.map((item, index) => {\n      return {\n        OrderNumber: item.OrderNumber,\n        OrderTime: item.OrderTime,\n        ExpectedDeliveryTime: item.ExpectedDeliveryTime,\n        ItemReviewCount: item.ItemReviewCount,\n        Items: item.Items,\n      };\n    });\n  }\n\n  confirmItem = (item) =>{\n    console.log(\"itemm\", item)\n    const {CONFIRM_ORDER} = this.props.Constants;\n    const payload ={\n      orderNo : item.orderNo\n    }\n    Swal.fire({\n      title: 'Are you sure you want to confirm this order',\n      showCancelButton: true,\n      confirmButtonText: 'Confirm',\n      showLoaderOnConfirm: true,\n      preConfirm: (login) => {\n        return this.props.ServiceBase.confirmOrder(CONFIRM_ORDER,payload)\n        .then((response) => {\n          console.log(\"response\", response.data);\n          \n        })\n        .catch((error) => {\n          // console.log(\"err confirming order\", error.response.data);\n          Swal.showValidationMessage(\n                  `Request failed: ${error.response.data.error}`\n                )\n           })\n        // return fetch(`//api.github.com/users/${login}`)\n        //   .then(response => {\n        //     if (!response.ok) {\n        //       throw new Error(response.statusText)\n        //     }\n        //     return response.json()\n        //   })\n        //   .catch(error => {\n        //     Swal.showValidationMessage(\n        //       `Request failed: ${error}`\n        //     )\n          // })\n      },\n      allowOutsideClick: () => !Swal.isLoading()\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire({\n          title: `Order Confirmed Successfully`,\n        })\n      }\n    })\n  }\n  render() {\n    let { classes } = this.props;\n    console.log(\"order in completed\", this.state.orders);\n    return (\n      <>\n        <>\n          <PaginationX\n            currentPage={this.state.currentPage}\n            service={this.props.ServiceBase.getCompletedOrders}\n            controller={this.props.Constants.ORDERS}\n            action={this.props.Constants.COMPLETED}\n            onNewPageRequest={this.onNewPageRequest}\n            searchData={this.state.searchData}\n            onChangePage={this.onChangePage}\n          />\n          <div style={{ opacity: this.state.op }}>\n            <CustomTable\n              classes={classes}\n              rows={this.state.pageOfItems}\n              isSearching={this.state.isSearching}\n              confirmItem={this.confirmItem}\n            />\n          </div>\n        </>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(CompletedOrders);\n// withRouter(connect(mapStateToProps, { loginWithEmailAndPassword })(SignIn))\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport ShoppingBasket from '@material-ui/icons/ShoppingBasket';\nimport ShoppingCartOutlined from '@material-ui/icons/ShoppingCartOutlined';\nimport AddShoppingCart from '@material-ui/icons/AddShoppingCart';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport NewOrders from './NewOrders';\nimport { Container } from '@material-ui/core';\nimport CompletedOrders from './CompletedOrders';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-force-tabpanel-${index}`}\n      aria-labelledby={`scrollable-force-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Container>\n        <Box p={3}>\n            {children}\n        </Box>\n    </Container>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-force-tab-${index}`,\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function OrderTabs(props) {\n  const classes = useStyles();\n  const initialTabIndex= props.incomingTab;\n  const [value, setValue] = React.useState(initialTabIndex);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          variant=\"fullWidth\"\n          scrollButtons=\"on\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"Orders categories\"\n        >\n          <Tab label=\"New Orders\" icon={<AddShoppingCart />} {...a11yProps(0)} />\n          <Tab label=\"Active Orders\" icon={<ShoppingBasket />} {...a11yProps(1)} />\n          <Tab label=\"Completed Orders\" icon={<ShoppingCartOutlined />} {...a11yProps(2)} />\n         </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <NewOrders {...props}/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        Active Orders\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <CompletedOrders {...props} />\n      </TabPanel>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Breadcrumb, SimpleCard } from \"matx\";\nimport Highlight from \"react-highlight\";\nimport OrderTabs from \"./shared/OrderTabs\";\n\nclass Orders extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orders: [],\n      searchData: {},\n      submitData: {},\n      PageSize: 10,\n      pageOfItems: [],\n      pager: {},\n      op: 1,\n      isSearching: false,\n      showTable: false,\n      show: true,\n    };\n  }\n\n\n  render() {\n \n    const incomingTab = this.props.location.state\n      ? this.props.location.state.tab || 0\n      : 0;\n    return (\n      <div className=\"m-sm-30\">\n        <div className=\"mb-sm-30\">\n          <Breadcrumb\n            routeSegments={[\n              { name: \"Home\", path: \"/app/dashboard\" },\n              { name: \"Orders\" },\n            ]}\n          />\n        </div>\n        <SimpleCard>\n          {/* <div className=\"py-8\"> */}\n          <OrderTabs\n            incomingTab={incomingTab}\n            {...this.props}\n          />\n          {/* </div> */}\n        </SimpleCard>\n      </div>\n    );\n  }\n}\n\nexport default Orders;\n"],"sourceRoot":""}